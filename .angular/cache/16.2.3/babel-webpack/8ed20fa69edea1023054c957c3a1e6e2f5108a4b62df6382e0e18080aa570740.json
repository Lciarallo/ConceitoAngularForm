{"ast":null,"code":"var _class;\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nconst baseURL = 'http://localhost:8080/api/produto';\nexport class ProdutoService {\n  constructor(http) {\n    this.http = http;\n  }\n  getAll() {\n    return this.http.get(baseURL);\n  }\n  get(id) {\n    return this.http.get(`${baseURL}/${id}`);\n  }\n  create(data) {\n    return this.http.post(baseURL, data);\n  }\n  update(id, data) {\n    return this.http.put(`${baseURL}/${id}`, data);\n  }\n  delete(id) {\n    return this.http.delete(`${baseURL}/${id}`, id);\n  }\n  deleteAll() {\n    return this.http.delete(baseURL);\n  }\n  findByName(name) {\n    return this.http.get(`${baseURL}?name=${name}`);\n  }\n}\n_class = ProdutoService;\n_class.ɵfac = function ProdutoService_Factory(t) {\n  return new (t || _class)(i0.ɵɵinject(i1.HttpClient));\n};\n_class.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: _class,\n  factory: _class.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["baseURL","ProdutoService","constructor","http","getAll","get","id","create","data","post","update","put","delete","deleteAll","findByName","name","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["C:\\Users\\luize\\OneDrive\\Documentos\\ConceitoAngularForm\\src\\app\\services\\produto.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\n\r\n\r\nconst baseURL = 'http://localhost:8080/api/produto'\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ProdutoService {\r\n\r\n  constructor(private http: HttpClient) {\r\n\r\n  }\r\n  getAll(): Observable<Produto[]> {\r\n    return this.http.get<Produto[]>(baseURL);\r\n  }\r\n  get(id:any):Observable<Produto>{\r\n    return this.http.get<Produto>(`${baseURL}/${id}`)\r\n  }\r\n  create(data:any):Observable<any>{\r\n    return this.http.post(baseURL , data)\r\n  }\r\n\r\n  update(id:any, data: any):Observable<any>{\r\n    return this.http.put(`${baseURL}/${id}`, data);\r\n  }\r\n\r\n  delete(id:any):Observable<any>{\r\n    return this.http.delete(`${baseURL}/${id}`, id)\r\n  }\r\n  deleteAll(): Observable<Produto[]> {\r\n    return this.http.delete<Produto[]>(baseURL);\r\n  }\r\n\r\n  findByName(name:any): Observable<Produto[]>{\r\n    return this.http.get<Produto[]>(`${baseURL}?name=${name}`)\r\n  }\r\n\r\n}\r\n"],"mappings":";;;AAKA,MAAMA,OAAO,GAAG,mCAAmC;AAKnD,OAAM,MAAOC,cAAc;EAEzBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;EAExB;EACAC,MAAMA,CAAA;IACJ,OAAO,IAAI,CAACD,IAAI,CAACE,GAAG,CAAYL,OAAO,CAAC;EAC1C;EACAK,GAAGA,CAACC,EAAM;IACR,OAAO,IAAI,CAACH,IAAI,CAACE,GAAG,CAAU,GAAGL,OAAO,IAAIM,EAAE,EAAE,CAAC;EACnD;EACAC,MAAMA,CAACC,IAAQ;IACb,OAAO,IAAI,CAACL,IAAI,CAACM,IAAI,CAACT,OAAO,EAAGQ,IAAI,CAAC;EACvC;EAEAE,MAAMA,CAACJ,EAAM,EAAEE,IAAS;IACtB,OAAO,IAAI,CAACL,IAAI,CAACQ,GAAG,CAAC,GAAGX,OAAO,IAAIM,EAAE,EAAE,EAAEE,IAAI,CAAC;EAChD;EAEAI,MAAMA,CAACN,EAAM;IACX,OAAO,IAAI,CAACH,IAAI,CAACS,MAAM,CAAC,GAAGZ,OAAO,IAAIM,EAAE,EAAE,EAAEA,EAAE,CAAC;EACjD;EACAO,SAASA,CAAA;IACP,OAAO,IAAI,CAACV,IAAI,CAACS,MAAM,CAAYZ,OAAO,CAAC;EAC7C;EAEAc,UAAUA,CAACC,IAAQ;IACjB,OAAO,IAAI,CAACZ,IAAI,CAACE,GAAG,CAAY,GAAGL,OAAO,SAASe,IAAI,EAAE,CAAC;EAC5D;;SA5BWd,cAAc;;mBAAdA,MAAc,EAAAe,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;AAAA;;SAAdlB,MAAc;EAAAmB,OAAA,EAAdnB,MAAc,CAAAoB,IAAA;EAAAC,UAAA,EAFb;AAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}